import warnings
from sklearn.exceptions import ConvergenceWarning
from sklearn.linear_model import LogisticRegression
print("TBC021153 Patil Ganesh ")
def load_data():
    X = [[1, 2], [3, 4], [5, 6]]
    y = [0, 1, 0]
    return X, y

X, y = load_data()

model = LogisticRegression()

with warnings.catch_warnings():
    warnings.filterwarnings("error", category=ConvergenceWarning)
    try:
        model.fit(X, y)
    except ConvergenceWarning:
        print("ConvergenceWarning: Maximum number of iterations exceeded")

score = model.score(X, y)
print("Model score:", score)

import warnings
from sklearn.exceptions import ConvergenceWarning
from sklearn.linear_model import LogisticRegression

def load_data():
    X = [[1, 2], [3, 4], [5, 6]]
    y = [0, 1, 0]
    return X, y

X, y = load_data()

model = LogisticRegression()

with warnings.catch_warnings():
    warnings.filterwarnings("error", category=ConvergenceWarning)
    try:
        model.fit(X, y)
    except ConvergenceWarning:
        print("ConvergenceWarning: Maximum number of iterations exceeded")

score = model.score(X, y)
print("Model score:", score)
